/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.coe.info6205.maze;

import java.awt.Container;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JTextField;


/**
 *
 * @author Siul
 */
public class RobotMaze extends javax.swing.JFrame {
    
    Container c = getContentPane();
    JTextField[] point = new JTextField[81];
    int[][] m = new int[][] { 
                { 0, 0, 0, 0, 1, 0, 1, 3, 2 }, 
                { 1, 0, 1, 1, 1, 0, 1, 3, 1 },
                { 1, 0, 0, 1, 3, 3, 3, 3, 1 }, 
                { 3, 3, 3, 1, 3, 1, 1, 0, 1 }, 
                { 3, 1, 3, 3, 3, 1, 1, 0, 0 },
                { 3, 3, 1, 1, 1, 1, 0, 1, 1 }, 
                { 1, 3, 0, 1, 3, 3, 3, 3, 3 }, 
                { 0, 3, 1, 1, 3, 1, 0, 1, 3 },
                { 1, 3, 3, 3, 3, 1, 1, 1, 4 } 
        };

    public RobotMaze() {
        initComponents();
        paint();
                      
    }
    
    public void paint(){
        int posx, posy;
        
        posy = 10;
        
        for(int i=0; i<9; i++){
            
            posx = 200;

            for(int j=0; j<9; j++){
                point[(9*i)+j] = new JTextField();
                point[(9*i)+j].setText("");
                point[(9*i)+j].setHorizontalAlignment(JTextField.CENTER);
                
                
                point[(9*i)+j].setBounds(posx, posy, 30, 30);

                c.add(point[(9*i)+j]);
                posx += 20;
            }
            posy += 20;
            
        }
        
        
        int z = 0;
        for(int[] a : m){
            for(int i : a){
                if(i == 1){
                    point[z].setBackground(java.awt.Color.black);
                }
                else if(i == 2){
                    point[z].setBackground(java.awt.Color.blue);
                }
                else if(i == 4){
                    point[z].setBackground(java.awt.Color.green);
                }
                else{
                    point[z].setBackground(java.awt.Color.white);
                }
                z++;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Resolver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(694, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(780, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RobotController rc = new RobotController(1000);
        HashMap<Integer, ArrayList<int[]>> map = rc.route(m);
        System.out.println("size:" + map.size());
        for(int i = 1; i < rc.maxGenerations; i++){
            paint();
            revalidate();
            for(int[] po : map.get(i)){
                point[9*po[1] + po[0]].setBackground(java.awt.Color.red);
            }
            
        }
    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RobotMaze().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
